# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: '*'

jobs:
  quality:

    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        node-version: [18.x]
        os: [ubuntu-latest]
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}
    - run: npm ci
    - run: npm test
  
  release:
    runs-on: ubuntu-latest
    if: ${{ github.ref == 'refs/heads/main' }}
    needs: [quality]
    steps: 
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}
    - run: npm ci
    - name: Semantic Release
      uses: cycjimmy/semantic-release-action@v4
      with:
        # You can specify specifying version range for the extra plugins if you prefer.
        extra_plugins: |
          @semantic-release/changelog@6.0.0
          @semantic-release/git
        branches: |
          [
            'main'
          ]
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

  deploy-image:
    name: Build and push the Docker image to ECR
    runs-on: ubuntu-latest
    if: ${{ github.ref == 'refs/heads/main' }}
    needs: [release]
    steps:
      - name: Check out the repository
        uses: actions/checkout@v3
  
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}
  
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
  
      - name: Build, tag, and push docker image to Amazon ECR Public
        run: |
          docker build -t semantic-release . 
          docker tag semantic-release:latest 347671896725.dkr.ecr.eu-central-1.amazonaws.com/ecr_semantic_release:latest
          docker push 347671896725.dkr.ecr.eu-central-1.amazonaws.com/ecr_semantic_release:latest